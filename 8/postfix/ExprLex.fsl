{
module ExprLex

open FSharp.Text.Lexing
open ExprPar

let lexemeAsString lexbuf = 
    LexBuffer<char>.LexemeString lexbuf
}

rule Token = parse
  | [' ' '\t' '\r'] { Token lexbuf }
  | '\n'            { lexbuf.EndPos <- lexbuf.EndPos.NextLine; Token lexbuf }
  | '-'?['0'-'9']+      { CSTINT (System.Int32.Parse (lexemeAsString lexbuf)) }
  | ['a'-'z''A'-'Z']['a'-'z''A'-'Z''0'-'9']*
                    { NAME (lexemeAsString lexbuf) }
  | '+'             { PLUS  } 
  | '-'             { MINUS } 
  | '*'             { TIMES }
  | '/'             { DIVIDE }
  | eof             { EOF   }
  | _               { failwith "Lexer error: illegal symbol" }